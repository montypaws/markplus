(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.unknown = mod.exports;
  }
})(this, function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = elements = [{ "type": "Comments", "size": 1, "lines": ["https://github.com/zhengxiaoyao0716/markplus"], "params": null, "at": 0 }, { "type": "Load", "size": 1, "lines": ["$console.log 'Markplus:', '{\\n'                                                 // `$IDENT ...args` used to call the ident function with args"], "params": { "name": "console.log", "exec": false, "extra": " 'Markplus:', '{\\n'                                                 // `$IDENT ...args` used to call the ident function with args" }, "at": 1 }, { "type": "Load", "size": 3, "lines": ["$console.log /2 /* `/N` will be replaced by next N lines after. */, '}\\n'", "    Home: https://github.com/zhengxiaoyao0716/markplus \\n", "    Author: github.com/zhengxiaoyao0716 \\n"], "params": { "name": "console.log", "exec": false, "extra": " /* `/N` will be replaced by next N lines after. */, '}\\n'" }, "at": 2 }, { "type": "Load", "size": 2, "lines": ["$console.log/1                                                                  // if `/N` followed `IDENT` directly without white-space,", "    new Date()                                                                  // the execution result would be used instead of convert to string."], "params": { "name": "console.log", "exec": true, "extra": "                                                                  // if `/N` followed `IDENT` directly without white-space," }, "at": 5 }, { "type": "Load", "size": 5, "lines": ["$_ /4                                                                           // equals to `$void /4`, nothing would execute but next N lines was gone.", "======== ======== ======== ======== ======== ======== ======== ========         // not equals to `$_/N` (without white-space), the latter will execute the codes.", "(^_^) Those block only visible in source to make things looks tidiness.", "======== ======== ======== ======== ======== ======== ======== ========", ""], "params": { "name": "_", "exec": false, "extra": "                                                                           // equals to `$void /4`, nothing would execute but next N lines was gone." }, "at": 7 }, { "type": "Save", "size": 1, "lines": ["#hitokoto(a, b, c) [a, b, c][parseInt(Math.random() * 3)]                       // `#IDENT(...args) ...results` used to define a function, `()` can be omitted if no arguments."], "params": { "name": "hitokoto", "args": "(a, b, c) ", "exec": false, "extra": " [a, b, c][parseInt(Math.random() * 3)]                       // `#IDENT(...args) ...results` used to define a function, `()` can be omitted if no arguments." }, "at": 12 }, { "type": "Save", "size": 4, "lines": ["#_lang /3                                                                       // you could use `#IDENT(...args) /N` to define a function composed by mutli-line functions.", "    location.search.match(/lang=(\\w+)/)                                         // `()` was omitted, for no arguments needed.", "    (match) console.log(match), ['en', 'zh', 'jp'][match && match[1]]           // although `...results` allowed, only the last result will return.", "    (index) arguments[index || 0]"], "params": { "name": "_lang", "exec": false, "extra": "                                                                       // you could use `#IDENT(...args) /N` to define a function composed by mutli-line functions." }, "at": 13 }, { "type": "Save", "size": 4, "lines": ["#lang/3                                                                         // `/N` followed `IDENT` directly without white-space,", "    location.search.match(/lang=(\\w+)/)                                         // the function defined below would be executed immediately.", "    (match) ['en', 'zh', 'jp'][match && match[1]]", "    (index) function () { return arguments[index || 0]; }                       // the last return is a function, and this would be assigned to the `IDENT`."], "params": { "name": "lang", "exec": true, "extra": "                                                                         // `/N` followed `IDENT` directly without white-space," }, "at": 17 }, { "type": "Save", "size": 1, "lines": ["#version/'v0.0.1'                                                               // `#IDENT/value` means `#IDENT/0 value`, you can use this to define constant."], "params": { "name": "version", "exec": true, "extra": "'v0.0.1'                                                               // `#IDENT/value` means `#IDENT/0 value`, you can use this to define constant." }, "at": 21 }, { "type": "Load", "size": 3, "lines": ["$console.log(console, 'version:')/2                                             // `$IDENT(this, ...thisArgs) ...args` equals to `$IDENT.bind(this, ...thisArgs)(...Args)`.", "    version                                                                     // for `/N` followed `$IDENT(...args)` directly, 'v0.0.1' was used, instead of 'version'.", "$_/'equals to `$_/0 ...`'                                                       // notice that the `...args` will be execute for `/N` followed `IDENT` directly without white-space."], "params": { "name": "console.log", "args": "(console, 'version:')/", "exec": true, "extra": "                                             // `$IDENT(this, ...thisArgs) ...args` equals to `$IDENT.bind(this, ...thisArgs)(...Args)`." }, "at": 22 }, { "type": "Load", "size": 101, "lines": ["$_ /:125                                                                        // `/:n` = `/N` , N = n - 25", "The codes above is equivalent to those:", "``` javascript", "    // L1", "    console.log(", "        'Markplus:', '{\\n'                                                 // `$IDENT ...args` used to call the ident function with args", "    );", "    // L2", "    console.log(", "        '    Home: https://github.com/zhengxiaoyao0716/markplus \\n',", "        '    Author: github.com/zhengxiaoyao0716 \\n',", "        '}\\n' /* `/N` will be replaced by next N lines after. */, '}\\n'", "    );", "    // L5", "    _L6 = (", "        new Date()                                                                  // the execution result would be used instead of convert to string.", "    );", "    console.log(", "        _L6                                                                  // if `/N` followed `IDENT` directly without white-space,", "    );", "    // L7", "    void(", "        '======== ======== ======== ======== ======== ======== ======== ========         // not equals to `$_/N` (without white-space), the latter will execute the codes.',", "        '(^_^) Those block only visible in source to make things looks tidiness.',", "        '======== ======== ======== ======== ======== ======== ======== ========',", "        ''                                                                           // equals to `$void /4`, nothing would execute but next N lines was gone.", "    );", "", "    // L12", "    function hitokoto(", "        a, b, c", "    ) { return (", "        [a, b, c][parseInt(Math.random() * 3)]                       // `#IDENT(...args) ...results` used to define a function, `()` can be omitted if no arguments.", "    ); }", "    // L13", "    function lang() {", "        var result;", "        result = (() => (", "            location.search.match(/lang=(\\w+)/)                                         // `()` was omitted, for no arguments needed.", "        ))(result);", "        result = ((", "            match", "        ) => (", "            console.log(match), ['en', 'zh', 'jp'][match && match[1]]           // although `...results` allowed, only the last result will return.", "        ))(result);", "        result = ((", "            index", "        ) => (", "            arguments[index || 0];", "        ))(result);", "        return (", "            result                                                                       // you could use `#IDENT(...args) /N` to define a function composed by mutli-line functions.", "        );", "    };", "    // L17", "    function _lang() {", "        var result;", "        result = (() => (", "            location.search.match(/lang=(\\w+)/)                                         // the function defined below would be executed immediately.", "        ))(result);", "        result = ((", "            match", "        ) => (", "            ['en', 'zh', 'jp'][match && match[1]]", "        ))(result);", "        result = ((", "            index", "        ) => (", "            function () { return arguments[index || 0]; }                       // the last return is a function, and this would be assigned to the `IDENT`.", "        ))(result);", "        return (", "            result                                                                         // `/N` followed `IDENT` directly without parentheses-params and white-space", "        );", "    }", "    lang = _lang();", "    // L21", "    function _version() { return (", "        'v0.0.1'                                                               // `#IDENT/value` means `#IDENT/0 value`, you can use this to define constant.", "    ); }", "    version = _version();", "    // L22", "    _L23 = (", "        version                                                                     // for `/N` followed `$IDENT(...args)` directly, 'v0.0.1' was used, instead of 'version'", "    );", "    _L24 = (", "        void(", "            'equals to `$_/0 ...`'                                                       // notice that the `...args` will be execute for `/N` followed `IDENT` directly without white-space.", "        )", "    );", "    console.log.bind(console, 'version:')(", "        _L23,", "        _L24                                             // `$IDENT(this, ...thisArgs) ...args` equals to `$IDENT.bind(this, ...thisArgs)(...Args)`.", "    );", "", "    // L25", "    void(", "        ',,,'                                                                        // `/:n` = `/N` , N = n - 25", "    )", "```", "", ""], "params": { "name": "_", "exec": false, "extra": "                                                                        // `/:n` = `/N` , N = n - 25" }, "at": 25 }, { "type": "Header", "size": 1, "lines": ["# Markplus"], "params": { "level": 1, "content": "Markplus" }, "at": 126 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "## The strengthening of the `Markdown`.", "## `Markdown` 的加强"], "params": { "name": "lang", "exec": true }, "at": 127 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 130 }, { "type": "Plain", "size": 1, "lines": ["***"], "params": null, "at": 131 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "## Base goal", "## 基础目标"], "params": { "name": "lang", "exec": true }, "at": 132 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "### More perfect tool chain.", "### 更完善的工具链"], "params": { "name": "lang", "exec": true }, "at": 135 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "Easy to embedded, Convenient extension.", "易用，易扩展"], "params": { "name": "lang", "exec": true }, "at": 138 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 141 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "### Strengthing for `Table` .", "### 加强表格"], "params": { "name": "lang", "exec": true }, "at": 142 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "Multi-unit-grid, Macro calculate.", "混合单元格，宏计算"], "params": { "name": "lang", "exec": true }, "at": 145 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 148 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "### Clearer semantics.", "### 更清晰的语义"], "params": { "name": "lang", "exec": true }, "at": 149 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "When to break line, When to scroll.", "何时换行，何时滚动"], "params": { "name": "lang", "exec": true }, "at": 152 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 155 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "### Dynamic interactivity.", "### 动态交互"], "params": { "name": "lang", "exec": true }, "at": 156 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "Optional\\ configurable and safety dynamic perform.", "可选、可配置并且安全的动态演出"], "params": { "name": "lang", "exec": true }, "at": 159 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 162 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "### Reasonable structure.", "### 合理的结构"], "params": { "name": "lang", "exec": true }, "at": 163 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "Reusable, Inheritable.", "可复用，可继承"], "params": { "name": "lang", "exec": true }, "at": 166 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 169 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "### Flexible usage.", "### 使用灵活"], "params": { "name": "lang", "exec": true }, "at": 170 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "Precompiled\\ Runtime-render.", "预编译、运行时渲染"], "params": { "name": "lang", "exec": true }, "at": 173 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 176 }, { "type": "Load", "size": 3, "lines": ["$lang/2", "## But, All the premises: Keep Simple.", "## 但是，一切的前提是：保持简单"], "params": { "name": "lang", "exec": true }, "at": 177 }, { "type": "Plain", "size": 1, "lines": [""], "params": null, "at": 180 }];
});