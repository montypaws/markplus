{"version":3,"sources":["../src/Parser.js"],"names":["Element","size","line","params","at","type","constructor","name","lines","push","length","JSON","stringify","json","Invalid","reason","Save","splited","Parser","Function","body","split","trim","args","exec","hold","extra","slice","map","ele","dump","join","linesResult","fn","startsWith","Load","HTMLElement","pipe","expr","Comments","tag","html","class","Plain","mathced","Header","level","content","Code","symbol","language","Divider","scopes","nestable","nonested","regex","cursor","nestableClose","nonestedClose","index","Array","from","findIndex","char","nonestedFound","find","nestableIndex","indexOf","unshift","shift","matched","match","holdSize","parseInt","$","enum","o","repeat","reduce","s","parse","elements","forEach","completed","reverse"],"mappings":"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","file":"Parser.js","sourcesContent":["export class Element {\r\n    constructor(size: number, line: string, params: any, at: number) {\r\n        this.type = this.constructor.name;\r\n        this.size = size;\r\n        const lines: [string | Element] = [line];\r\n        this.lines = lines;\r\n        this.params = params;\r\n        this.at = at;\r\n    }\r\n    push(line: string, at: number) { // eslint-disable-line no-unused-vars\r\n        this.lines.push(line);\r\n    }\r\n    completed(line: string, at: number) { // eslint-disable-line no-unused-vars\r\n        return this.size == this.lines.length;\r\n    }\r\n    get json() { return this; }\r\n    dump() { return `Markplus.register(${this.at}, ${JSON.stringify({ ...this.json })});`; }\r\n}\r\nexport class Invalid extends Element {\r\n    constructor(line: string, reason: string, at: number) {\r\n        super(1, line, { reason }, at);\r\n    }\r\n    dump() { return `console.error(${JSON.stringify(this)});`; }\r\n}\r\nexport class Save extends Element {\r\n    push(line: string, at: number) { // eslint-disable-line no-unused-vars\r\n        const splited = Parser.Function.body.split(line.trim());\r\n        if (!splited) {\r\n            this.lines.push(new Invalid(line, `child function of (${this.params.name}) syntax invalid.`));\r\n            return;\r\n        }\r\n        const { args, exec, hold, extra } = splited;\r\n        if (exec) {\r\n            this.lines.push(new Invalid(line, 'multi-lines functions cannot have immediately child function.'));\r\n            return;\r\n        }\r\n        if (hold) {\r\n            this.lines.push(new Invalid(line, 'nested multi-lines functions not support.'));\r\n            return;\r\n        }\r\n        this.lines.push(new Save(1, line, { args, extra }, at));\r\n    }\r\n    dump() {\r\n        const { name, args, exec, extra = '' } = this.params;\r\n        const lines = this.size == 1 ? ''\r\n            : `    ${[\r\n                'let result;',\r\n                ...this.lines.slice(1)\r\n                    .map(ele => ele instanceof Invalid ? `() => ${ele.dump()}` : ele.params)\r\n                    .map(({ args, extra = '' }) => `result = (${args || '()'} => (\\n        ${extra}\\n    ))(result);`),\r\n            ].join('\\n    ')}\\n`;\r\n        const linesResult = this.size == 1 ? '' : 'result';\r\n        const fn = `function ${args || '()'} {\\n${lines}    return (\\n        ${linesResult}${extra}\\n    );\\n}`;\r\n        return `${name.startsWith('_') ? '' : 'export '}const ${name} = ${exec ? `(${fn})()` : fn};`;\r\n    }\r\n}\r\nexport class Load extends Element {\r\n    push(line: string, at: number) { // eslint-disable-line no-unused-vars\r\n        if (!this.params.exec) {\r\n            this.lines.push(line);\r\n            return;\r\n        }\r\n        const ele = Parser.HTMLElement.pipe(line, at);\r\n        if (!ele) {\r\n            this.lines.push(line.slice(4));\r\n            return;\r\n        }\r\n        this.lines.push(ele);\r\n    }\r\n    dump() {\r\n        const { name, args, exec, extra = '' } = this.params;\r\n        const lines = this.size == 1 ? ''\r\n            : this.lines.slice(1).map(\r\n                exec ?\r\n                    line => line instanceof Element ?\r\n                        `${JSON.stringify(line.json)}` : `(\\n        ${line}\\n    )`\r\n                    : line => `${JSON.stringify(line)}`\r\n            ).join(',\\n    ');\r\n        const expr = `${args ? `${name}.bind${args}` : name}(\\n    ${lines}${extra}\\n)`;\r\n        return `Markplus.register(${this.at}, ${expr});`;\r\n    }\r\n}\r\nexport class Comments extends Element {\r\n    constructor(line: string, at: number) {\r\n        super(1, line, null, at);\r\n    }\r\n    get json() {\r\n        return { tag: 'span', html: `<!-- ${this.lines[0]} -->`, class: 'Comments' };\r\n    }\r\n}\r\nexport class Plain extends Element {\r\n    constructor(line: string, at: number, mathced?: [string]) {\r\n        super(1, line, { mathced }, at);\r\n    }\r\n    get json() {\r\n        return { tag: 'span', html: `${this.lines[0]}<br>`, class: 'Plain' };\r\n    }\r\n}\r\nexport class Header extends Element {\r\n    constructor(line: string, level: number, content: string, at: number) {\r\n        super(1, line, { level, content }, at);\r\n        this.level = level;\r\n        this.content = content;\r\n    }\r\n    get json() {\r\n        return { tag: 'span', html: `${this.content}<br>`, class: `Header Header-${this.level}`, 'data-markplus-header-level': this.level };\r\n    }\r\n}\r\nexport class Code extends Element {\r\n    static symbol = ['~~~', '```'];\r\n    constructor(line: string, symbol: string, language: string, at: number) {\r\n        super(-1, line, { language }, at);\r\n        this.symbol = symbol;\r\n        this.language = language;\r\n    }\r\n    get json() {\r\n        return {\r\n            tag: 'span',\r\n            html: this.lines.slice(1, this.size - 1).map(line => `<span>${line}</span><br>`).join(''),\r\n            class: `Code Code-${this.language}`,\r\n        };\r\n    }\r\n    push(line: string, at: number) { // eslint-disable-line no-unused-vars\r\n        this.lines.push(line);\r\n        if (line == this.symbol) {\r\n            this.size = this.lines.length;\r\n        }\r\n    }\r\n}\r\nexport class Divider extends Element {\r\n    constructor(line: string, at: number) {\r\n        super(1, line, {}, at);\r\n    }\r\n    get json() {\r\n        return { tag: 'span', html: '<br>', class: 'Divider' };\r\n    }\r\n}\r\n\r\nconst Parser = {\r\n    Function: {\r\n        body: {\r\n            scopes: {\r\n                nestable: '()[]{}',\r\n                nonested: ['\\'\\'', '``', '\"\"', ['/*', '*/']],\r\n            },\r\n            regex: /^(\\s*\\/:?\\d+)?(.*)?$/,\r\n            split(body: string) {\r\n                const { scopes, regex } = this;\r\n                let args;\r\n                let cursor = 0;\r\n                if (body[cursor] == '(') {\r\n                    let nestableClose = [];\r\n                    let nonestedClose = null;\r\n                    const index = Array.from(body).findIndex((char) => {\r\n                        if (nonestedClose) {\r\n                            if (char == nonestedClose) {\r\n                                nonestedClose = null;\r\n                            }\r\n                            return false;\r\n                        }\r\n                        const nonestedFound = scopes.nonested.find(symbol => symbol[0] == char);\r\n                        if (nonestedFound) {\r\n                            nonestedClose = nonestedFound[1];\r\n                            return false;\r\n                        }\r\n                        const nestableIndex = scopes.nestable.indexOf(char);\r\n                        if (nestableIndex == -1) {\r\n                            return false;\r\n                        }\r\n                        if (nestableIndex % 2 == 0) {\r\n                            nestableClose.unshift(scopes.nestable[1 + nestableIndex]);\r\n                            return false;\r\n                        }\r\n                        if (char != nestableClose[0]) {\r\n                            return false;\r\n                        }\r\n                        nestableClose.shift();\r\n                        return nestableClose.length == 0;\r\n                    });\r\n                    if (index == -1) {\r\n                        return false;\r\n                    }\r\n                    cursor = 1 + index;\r\n                    args = body.slice(0, 1 + cursor);\r\n                }\r\n                const matched = body.slice(cursor).match(regex);\r\n                if (matched == null) {\r\n                    return false;\r\n                }\r\n                const [, hold, extra] = matched;\r\n                if (!hold) {\r\n                    if (extra[0] == '/') {\r\n                        return { args, exec: true, hold: null, extra: extra.slice(1) };\r\n                    }\r\n                    if (extra[0] == ' ') {\r\n                        return { args, exec: false, hold: null, extra: extra.slice(1) };\r\n                    }\r\n                }\r\n                const exec = hold != null && hold[0] == '/';\r\n                return { args, exec, hold: hold && hold.trim(), extra };\r\n            },\r\n        },\r\n        regex: /^([$#])([\\w.]+)(.*)?$/,\r\n        pipe(line: string, at: number): Save | Load {\r\n            const match = line.match(this.regex);\r\n            if (match == null) {\r\n                return false;\r\n            }\r\n            const [, type, name, body] = match;\r\n            const splited = this.body.split(body);\r\n            if (!splited) {\r\n                return new Invalid(line, `unexpected body(${body}) `, at);\r\n            }\r\n            const { args, exec, hold, extra } = splited;\r\n            const holdSize =\r\n                hold ?\r\n                    hold[1] == ':' ?\r\n                        parseInt(hold.slice(2)) - at\r\n                        : parseInt(hold.slice(1))\r\n                    : 0;\r\n            if (holdSize < 0) {\r\n                return new Invalid(line, `unexpected size(${holdSize}), check: ${hold} `, at);\r\n            }\r\n            return new ({ $: Load, '#': Save })[type](\r\n                1 + holdSize,\r\n                line,\r\n                { name: name == '_' ? 'void' : name, args, exec, extra },\r\n                at,\r\n            );\r\n        },\r\n    },\r\n    HTMLElement: {\r\n        enum: {\r\n            pipe(line: string, at: number): Element {\r\n                return new (({\r\n                    '---': Divider,\r\n                    '***': Divider,\r\n                })[line] || Plain)(line, at);\r\n            },\r\n        },\r\n        regex: /^(\\S*)\\s(.*)$/,\r\n        pipe(line: string, at: number): Element {\r\n            const matched = line.match(this.regex);\r\n            if (matched == null) {\r\n                return this.enum.pipe(line, at);\r\n            }\r\n            const [, type, content] = matched;\r\n            const pipe = ({\r\n                ...(o => (o['#'.repeat(type.length || 1)] = content => new Header(line, type.length, content, at), o))({}),\r\n                ...Code.symbol.reduce((o, s) => (o[s] = () => new Code(line, s, content, at), o), {}),\r\n                '': () => line.startsWith('    ') ? false : new Plain(line, at), // 4 white-space means code.\r\n            })[type];\r\n            if (!pipe) {\r\n                return new Plain(line, at, { type, content });\r\n            }\r\n            return pipe(content);\r\n        },\r\n    },\r\n    pipe(line: string, at: number): Element {\r\n        return this.Function.pipe(line, at) || this.HTMLElement.pipe(line, at) || new Invalid(line, 'Unknown syantax.', at);\r\n    },\r\n    parse(lines: [string]) {\r\n        const elements = [new Comments('https://github.com/zhengxiaoyao0716/markplus', 0)];\r\n        lines.forEach((line, index) => {\r\n            const at = 1 + index;\r\n            const ele = elements[0];\r\n            if (ele.completed(line, at)) {\r\n                elements.unshift(this.pipe(line, at));\r\n                return;\r\n            }\r\n            ele.push(line, at);\r\n        });\r\n        return elements.reverse();\r\n    },\r\n};\r\nexport default Parser;\r\n"]}